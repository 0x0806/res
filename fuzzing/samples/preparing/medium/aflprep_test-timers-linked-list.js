'use strict';
const assert = require('assert');
const list = { name: 'list' };
const A = { name: 'A' };
const B = { name: 'B' };
const C = { name: 'C' };
const D = { name: 'D' };
L.init(list);
L.init(A);
L.init(B);
L.init(C);
L.init(D);
assert.ok(L.isEmpty(list));
assert.strictEqual(L.peek(list), null);
L.append(list, A);
assert.strictEqual(L.peek(list), A);
L.append(list, B);
assert.strictEqual(L.peek(list), A);
L.append(list, C);
assert.strictEqual(L.peek(list), A);
L.append(list, D);
assert.strictEqual(L.peek(list), A);
L.remove(A);
L.remove(B);
L.remove(B);
assert.strictEqual(L.peek(list), C);
L.append(list, B);
assert.strictEqual(L.peek(list), C);
L.remove(C);
assert.strictEqual(L.peek(list), D);
L.remove(B);
assert.strictEqual(L.peek(list), D);
L.remove(D);
assert.strictEqual(L.peek(list), null);
assert.ok(L.isEmpty(list));
L.append(list, D);
assert.strictEqual(L.peek(list), D);
L.append(list, C);
L.append(list, B);
L.append(list, A);
L.append(list, C);
assert.strictEqual(L.peek(list), D);
assert.strictEqual(L.peek(D), B);
assert.strictEqual(L.peek(B), A);
assert.strictEqual(L.peek(A), C);
assert.strictEqual(L.peek(C), list);
